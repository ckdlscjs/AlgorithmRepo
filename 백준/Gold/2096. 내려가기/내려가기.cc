#include <bits/stdc++.h>
using namespace std;
int N, dp[2][2][3];
int main() 
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    std::cin >> N;
    std::cin >> dp[0][0][0] >> dp[0][0][1] >> dp[0][0][2];
    dp[0][1][0] = dp[0][0][0];
    dp[0][1][1] = dp[0][0][1];
    dp[0][1][2] = dp[0][0][2];
    dp[1][0][0] += std::min(dp[0][0][0], dp[0][0][1]);
    dp[1][1][0] += std::max(dp[0][1][0], dp[0][1][1]);
        
    dp[1][0][1] += std::min({dp[0][0][0], dp[0][0][1], dp[0][0][2]});
    dp[1][1][1] += std::max({dp[0][1][0], dp[0][1][1], dp[0][1][2]});
        
    dp[1][0][2] += std::min(dp[0][0][1], dp[0][0][2]);
    dp[1][1][2] += std::max(dp[0][1][1], dp[0][1][2]);
    for(int n = 1; n < N; n++)
    {
        std::cin >> dp[1][0][0] >> dp[1][0][1] >> dp[1][0][2];
        dp[1][1][0] = dp[1][0][0];
        dp[1][1][1] = dp[1][0][1];
        dp[1][1][2] = dp[1][0][2];
        
        dp[1][0][0] += std::min(dp[0][0][0], dp[0][0][1]);
        dp[1][1][0] += std::max(dp[0][1][0], dp[0][1][1]);
        
        dp[1][0][1] += std::min({dp[0][0][0], dp[0][0][1], dp[0][0][2]});
        dp[1][1][1] += std::max({dp[0][1][0], dp[0][1][1], dp[0][1][2]});
        
        dp[1][0][2] += std::min(dp[0][0][1], dp[0][0][2]);
        dp[1][1][2] += std::max(dp[0][1][1], dp[0][1][2]);
        
        dp[0][0][0] = dp[1][0][0];
        dp[0][1][0] = dp[1][1][0];
        
        dp[0][0][1] = dp[1][0][1];
        dp[0][1][1] = dp[1][1][1];
        
        dp[0][0][2] = dp[1][0][2];
        dp[0][1][2] = dp[1][1][2];
    }
    std::cout << std::max({dp[1][1][0], dp[1][1][1], dp[1][1][2]}) << ' ' << std::min({dp[1][0][0], dp[1][0][1], dp[1][0][2]});
    return 0;
}
